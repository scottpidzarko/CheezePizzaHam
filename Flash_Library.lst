                 -1   $MODDE2
0000              1   ;  MODDDE2: Register definition for DE2-8052 softcore
0000              2   ;
0000              3   ;   Copyright (C) 2011  Jesus Calvino-Fraga, jesusc at ece.ubc.ca
0000              4   ;
0000              5   ;   This library is free software; you can redistribute it and/or
0000              6   ;   modify it under the terms of the GNU Lesser General Public
0000              7   ;   License as published by the Free Software Foundation; either
0000              8   ;   version 2.1 of the License, or (at your option) any later version.
0000              9   ;
0000             10   ;   This library is distributed in the hope that it will be useful,
0000             11   ;   but WITHOUT ANY WARRANTY; without even the implied warranty of
0000             12   ;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
0000             13   ;   Lesser General Public License for more details.
0000             14   ;
0000             15   ;   You should have received a copy of the GNU Lesser General Public
0000             16   ;   License along with this library; if not, write to the Free Software
0000             17   ;   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
0000             18   ;
0000             19       
0000             20   P0     DATA  080H  ;PORT 0
0000             21   SP     DATA  081H  ;STACK POINTER
0000             22   DPL    DATA  082H  ;DATA POINTER - LOW BYTE
0000             23   DPH    DATA  083H  ;DATA POINTER - HIGH BYTE
0000             24   PCON   DATA  087H  ;POWER CONTROL
0000             25   TCON   DATA  088H  ;TIMER CONTROL
0000             26   TMOD   DATA  089H  ;TIMER MODE
0000             27   TL0    DATA  08AH  ;TIMER 0 - LOW BYTE
0000             28   TL1    DATA  08BH  ;TIMER 1 - LOW BYTE
0000             29   TH0    DATA  08CH  ;TIMER 0 - HIGH BYTE
0000             30   TH1    DATA  08DH  ;TIMER 1 - HIGH BYTE
0000             31   P1     DATA  090H  ;PORT 1
0000             32   SCON   DATA  098H  ;SERIAL PORT CONTROL
0000             33   SBUF   DATA  099H  ;SERIAL PORT BUFFER
0000             34   P2     DATA  0A0H  ;PORT 2
0000             35   IE     DATA  0A8H  ;INTERRUPT ENABLE
0000             36   P3     DATA  0B0H  ;PORT 3
0000             37   IP     DATA  0B8H  ;INTERRUPT PRIORITY
0000             38   T2CON  DATA  0C8H  ;TIMER 2 CONTROL
0000             39   T2MOD  DATA  0C9H  ;TIMER 2 MODE
0000             40   RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
0000             41   RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
0000             42   TL2    DATA  0CCH  ;TIMER 2 - LOW BYTE
0000             43   TH2    DATA  0CDH  ;TIMER 2 - HIGH BYTE
0000             44   PSW    DATA  0D0H  ;PROGRAM STATUS WORD
0000             45   ACC    DATA  0E0H  ;ACCUMULATOR
0000             46   B      DATA  0F0H  ;MULTIPLICATION REGISTER
0000             47   IT0    BIT   088H  ;TCON.0 - EXT. INTERRUPT 0 TYPE
0000             48   IE0    BIT   089H  ;TCON.1 - EXT. INTERRUPT 0 EDGE FLAG
0000             49   IT1    BIT   08AH  ;TCON.2 - EXT. INTERRUPT 1 TYPE
0000             50   IE1    BIT   08BH  ;TCON.3 - EXT. INTERRUPT 1 EDGE FLAG
0000             51   TR0    BIT   08CH  ;TCON.4 - TIMER 0 ON/OFF CONTROL
0000             52   TF0    BIT   08DH  ;TCON.5 - TIMER 0 OVERFLOW FLAG
0000             53   TR1    BIT   08EH  ;TCON.6 - TIMER 1 ON/OFF CONTROL
0000             54   TF1    BIT   08FH  ;TCON.7 - TIMER 1 OVERFLOW FLAG
0000             55   RI     BIT   098H  ;SCON.0 - RECEIVE INTERRUPT FLAG
0000             56   TI     BIT   099H  ;SCON.1 - TRANSMIT INTERRUPT FLAG
0000             57   RB8    BIT   09AH  ;SCON.2 - RECEIVE BIT 8
0000             58   TB8    BIT   09BH  ;SCON.3 - TRANSMIT BIT 8
0000             59   REN    BIT   09CH  ;SCON.4 - RECEIVE ENABLE
0000             60   SM2    BIT   09DH  ;SCON.5 - SERIAL MODE CONTROL BIT 2
0000             61   SM1    BIT   09EH  ;SCON.6 - SERIAL MODE CONTROL BIT 1
0000             62   SM0    BIT   09FH  ;SCON.7 - SERIAL MODE CONTROL BIT 0
0000             63   EX0    BIT   0A8H  ;IE.0 - EXTERNAL INTERRUPT 0 ENABLE
0000             64   ET0    BIT   0A9H  ;IE.1 - TIMER 0 INTERRUPT ENABLE
0000             65   EX1    BIT   0AAH  ;IE.2 - EXTERNAL INTERRUPT 1 ENABLE
0000             66   ET1    BIT   0ABH  ;IE.3 - TIMER 1 INTERRUPT ENABLE
0000             67   ES     BIT   0ACH  ;IE.4 - SERIAL PORT INTERRUPT ENABLE
0000             68   ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
0000             69   EA     BIT   0AFH  ;IE.7 - GLOBAL INTERRUPT ENABLE
0000             70   RXD    BIT   0B0H  ;P3.0 - SERIAL PORT RECEIVE INPUT
0000             71   TXD    BIT   0B1H  ;P3.1 - SERIAL PORT TRANSMIT OUTPUT
0000             72   INT0   BIT   0B2H  ;P3.2 - EXTERNAL INTERRUPT 0 INPUT
0000             73   INT1   BIT   0B3H  ;P3.3 - EXTERNAL INTERRUPT 1 INPUT
0000             74   T0     BIT   0B4H  ;P3.4 - TIMER 0 COUNT INPUT
0000             75   T1     BIT   0B5H  ;P3.5 - TIMER 1 COUNT INPUT
0000             76   WR     BIT   0B6H  ;P3.6 - WRITE CONTROL FOR EXT. MEMORY
0000             77   RD     BIT   0B7H  ;P3.7 - READ CONTROL FOR EXT. MEMORY
0000             78   PX0    BIT   0B8H  ;IP.0 - EXTERNAL INTERRUPT 0 PRIORITY
0000             79   PT0    BIT   0B9H  ;IP.1 - TIMER 0 PRIORITY
0000             80   PX1    BIT   0BAH  ;IP.2 - EXTERNAL INTERRUPT 1 PRIORITY
0000             81   PT1    BIT   0BBH  ;IP.3 - TIMER 1 PRIORITY
0000             82   PS     BIT   0BCH  ;IP.4 - SERIAL PORT PRIORITY
0000             83   PT2    BIT   0BDH  ;IP.5 - TIMER 2 PRIORITY
0000             84   CAP2   BIT   0C8H  ;T2CON.0 - CAPTURE OR RELOAD SELECT
0000             85   CNT2   BIT   0C9H  ;T2CON.1 - TIMER OR COUNTER SELECT
0000             86   TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
0000             87   EXEN2  BIT   0CBH  ;T2CON.3 - TIMER 2 EXTERNAL ENABLE FLAG
0000             88   TCLK   BIT   0CCH  ;T2CON.4 - TRANSMIT CLOCK SELECT
0000             89   RCLK   BIT   0CDH  ;T2CON.5 - RECEIVE CLOCK SELECTT
0000             90   EXF2   BIT   0CEH  ;T2CON.6 - EXTERNAL TRANSITION FLAG
0000             91   TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
0000             92   P      BIT   0D0H  ;PSW.0 - ACCUMULATOR PARITY FLAG
0000             93   OV     BIT   0D2H  ;PSW.2 - OVERFLOW FLAG
0000             94   RS0    BIT   0D3H  ;PSW.3 - REGISTER BANK SELECT 0
0000             95   RS1    BIT   0D4H  ;PSW.4 - REGISTER BANK SELECT 1
0000             96   F0     BIT   0D5H  ;PSW.5 - FLAG 0
0000             97   AC     BIT   0D6H  ;PSW.6 - AUXILIARY CARRY FLAG
0000             98   CY     BIT   0D7H  ;PSW.7 - CARRY FLAG
0000             99   
0000            100   ; For the altera DE2 configured with an 8051/8052 softcore processor
0000            101   ; we have the following extra registers:
0000            102   
0000            103   HEX0   DATA  091H ; Zero turns the segment on
0000            104   HEX1   DATA  092H ; 
0000            105   HEX2   DATA  093H ; 
0000            106   HEX3   DATA  094H ; 
0000            107   HEX4   DATA  08EH ;
0000            108   HEX5   DATA  08FH ;
0000            109   HEX6   DATA  096H ;
0000            110   HEX7   DATA  097H ;
0000            111   
0000            112   P0MOD  DATA  09AH ; Input/output mode bits for port 0.  '1' sets the port to output mode.
0000            113   P1MOD  DATA  09BH ; Input/output mode bits for port 1
0000            114   P2MOD  DATA  09CH ; Input/output mode bits for port 2
0000            115   P3MOD  DATA  09DH ; Input/output mode bits for port 3
0000            116   
0000            117   LEDRA  DATA  0E8H ; LEDs LEDR0 to LEDR7 (bit addressable, ex: LEDRA.1 for LEDR1)
0000            118   LEDRB  DATA  095H ; LEDs LEDR8 to LEDR15
0000            119   LEDRC  DATA  09EH ; LEDs LEDR16, LEDR15, and LEDG8
0000            120   LEDG   DATA  0F8H ; LEDs LEDG0 to LEDG7 (bit addressable, ex: LEDG.3 for LEDG3)
0000            121   SWA    DATA  0E8H ; Switches SW0 to SW7 (bit addressable, ex: SWA.1 for SW1)
0000            122   SWB    DATA  095H ; Switches SW8 to SW15
0000            123   SWC    DATA  09EH ; Switches SW16 and SW17
0000            124   KEY    DATA  0F8H ; KEY1=KEY.1, KEY2=KEY.2, KEY3=KEY.3.  KEY0 is the reset button! 
0000            125   
0000            126   LCD_CMD   DATA 0D8H ;
0000            127   LCD_DATA  DATA 0D9H ;
0000            128   LCD_MOD   DATA 0DAH ; Write 0xff to make LCD_DATA an output
0000            129   LCD_RW    BIT  0D8H ; '0' writes to LCD
0000            130   LCD_EN    BIT  0D9H ; Toggle from '1' to '0'
0000            131   LCD_RS    BIT  0DAH ; '0' for commands, '1' for data
0000            132   LCD_ON    BIT  0DBH ; Write '1' to power the LCD
0000            133   LCD_BLON  BIT  0DCH ; Write '1' to turn on back light
0000            134   
0000            135   FLASH_CMD  data 0DBH ; The control bits of the flash memory:
0000            136   ; bit 0: FL_RST_N  Set to 1 for normal operation
0000            137   ; bit 1: FL_WE_N
0000            138   ; bit 2: FL_OE_N
0000            139   ; bit 3: FL_CE_N
0000            140   FLASH_DATA data 0DCH ; 8-bit data bus of flash memory.
0000            141   FLASH_MOD  data 0DDH ; 0xff makes FLASH_DATA output.  0x00 makes FLASH_DATA input.
0000            142   FLASH_ADD0 data 0E1H ; address bits 0 to 7.
0000            143   FLASH_ADD1 data 0E2H ; address bits 8 to 15.
0000            144   FLASH_ADD2 data 0E3H ; address bits 16 to 21.
0000            145   
0000              2   
0000              3   ;FLASHSECTOR: Refers to the Flash sector we are using.
0000              4   ; Generally in our program we won't use multiple sectors.
0000              5   ;
0000              6   ;Flash sector SA1-SA7 are 8KB. Sectors SA8 - SA70 are 64KB
0000              7   ; ** SA8 is reverved for DEw-8052 soft processor progam storage
0000              8   ; 
0000              9   ; We select sector SA8 with FLASHSECTOR = 1, SA9 with FLASHSECTOR=2,
0000             10   ; and so on.
0000             11   
0000             12   org 0000H
0000 02011A      13            ljmp myprogram
0003             14   
0030             15   DSEG at 30H
0030             16   
0030             17   SoakTemp: ds 1
0031             18   SoakTime: ds 1
0032             19   ReflowTemp: ds 1
0033             20   ReflowTime: ds 1
0034             21   RampTime: ds 1
0035             22   DigitCount: ds 1
0036             23   MenuState: ds 1  
0037             24   
0003             25   CSEG
0003             26   
0003             27   FLASHSECTOR:
0003 01          28            db 1
0004             29   
0004             30            
0004             31            
0004             32   
0004             33   ; To read a byte from flash memory, put the address in dptr.
0004             34   ; The result returns in acc.
0004             35   Read_Flash:
0004 75DD00      36            mov FLASH_MOD, #0x00 ; Set data port for input
0007 8582E1      37            mov FLASH_ADD0, dpl
000A 8583E2      38            mov FLASH_ADD1, dph
000D 75E303      39            mov FLASH_ADD2, #FLASHSECTOR
0010 75DB07      40            mov FLASH_CMD, #0111B ; FL_CE_N=0, FL_OE_N=1
0013 75DB03      41            mov FLASH_CMD, #0011B ; FL_CE_N=0, FL_OE_N=0
0016 00          42            nop
0017 E5DC        43            mov a, FLASH_DATA
0019 00          44            nop
001A 75DB07      45            mov FLASH_CMD, #0111B ; FL_CE_N=0, FL_OE_N=1
001D 75DB0F      46            mov FLASH_CMD, #1111B ; FL_CE_N=1, FL_OE_N=1
0020 22          47            ret
0021             48            
0021             49   ; To write a byte to flash memory, put the address in dptr
0021             50   ; and the byte to write in acc.
0021             51   Write_Flash:
0021 75DDFF      52            mov FLASH_MOD, #0ffh ; Set data port for output
0024 8582E1      53            mov FLASH_ADD0, dpl
0027 8583E2      54            mov FLASH_ADD1, dph
002A 75E303      55            mov FLASH_ADD2, #FLASHSECTOR
002D F5DC        56            mov FLASH_DATA, a
002F 75DB07      57            mov FLASH_CMD, #0111B ; FL_CE_N=0, FL_WE_N=1
0032 75DB05      58            mov FLASH_CMD, #0101B ; FL_CE_N=0, FL_WE_N=0
0035 75DB07      59            mov FLASH_CMD, #0111B ; FL_CE_N=0, FL_WE_N=1
0038 75DB0F      60            mov FLASH_CMD, #1111B ; FL_CE_N=1, FL_WE_N=1
003B 22          61            ret
003C             62   
003C             63   ; Zeros out the sector of flashmemory defined by FLASHSECTOR
003C             64   ;----------------------------------------------------------------
                 65   Write_Constant_Flash mac
                 66   	mov dptr, #%0
                 67   	mov a, #%1
                 68   	lcall Write_Flash
                 69   Endmac
003C             70   
003C             71   EraseSector:
003C 900AAA      72            mov dptr, # 0x0AAA
003F 74AA        72            mov a, #0xAA 
0041 120021      72            lcall Write_Flash
0044 900555      73            mov dptr, # 0x0555
0047 7455        73            mov a, #0x55 
0049 120021      73            lcall Write_Flash
004C 900AAA      74            mov dptr, # 0x0AAA
004F 7480        74            mov a, #0x80 
0051 120021      74            lcall Write_Flash
0054 900AAA      75            mov dptr, # 0x0AAA
0057 74AA        75            mov a, #0xAA 
0059 120021      75            lcall Write_Flash
005C 900555      76            mov dptr, # 0x0555
005F 7455        76            mov a, #0x55 
0061 120021      76            lcall Write_Flash
0064 900000      77            mov dptr, # 0x0000
0067 7430        77            mov a, #0x30 
0069 120021      77            lcall Write_Flash
006C             78            ; Check using DQ7 Data# polling when the erasing is done
006C             79   EraseSector_L0:
006C 900000      80            mov dptr, #0
006F 120004      81            lcall Read_Flash
0072 F4          82            cpl a
0073 70F7        83            jnz EraseSector_L0
0075 22          84            ret
0076             85   ;-------------------------------------------------------------------     
0076             86   
0076             87   ; Flashes a byte in a to the location in flash indicated by dptr,
0076             88   ; also verifies if write worked correctly
0076             89   Flash_Byte:
0076 C083        90            push dph
0078 C082        91            push dpl
007A C0E0        92            push acc
007C 900AAA      93            mov dptr, # 0x0AAA
007F 74AA        93            mov a, #0xAA 
0081 120021      93            lcall Write_Flash
0084 900555      94            mov dptr, # 0x0555
0087 7455        94            mov a, #0x55 
0089 120021      94            lcall Write_Flash
008C 900AAA      95            mov dptr, # 0x0AAA
008F 74A0        95            mov a, #0xA0 
0091 120021      95            lcall Write_Flash
0094 D0E0        96            pop acc
0096 D082        97            pop dpl
0098 D083        98            pop dph
009A F8          99            mov r0, a ; Used later when checking...
009B 120021     100            lcall Write_Flash
009E            101            ;Check using DQ7 Data# polling when operation is done
009E            102   Flash_Byte_L0:
009E 120004     103            lcall Read_Flash
00A1 C3         104            clr c
00A2 98         105            subb a, r0
00A3 70F9       106            jnz Flash_Byte_L0
00A5 22         107            ret
00A6            108   
00A6            109   ; Save SoakTemp, SoakTime, ReflowTemp, ReflowTime, RampTime in flash memory
00A6            110   SaveConfig:
00A6 12003C     111            lcall EraseSector ; We need to erase whole sector :(
00A9 900000     112            mov dptr, #0
00AC E530       113            mov a, SoakTemp
00AE 120076     114            lcall Flash_Byte
00B1 A3         115            inc dptr
00B2 E531       116            mov a, SoakTime
00B4 120076     117            lcall Flash_Byte
00B7 A3         118            inc dptr
00B8 E532       119            mov a, ReflowTemp
00BA 120076     120            lcall Flash_Byte
00BD A3         121            inc dptr
00BE E533       122            mov a, ReflowTime
00C0 120076     123            lcall Flash_Byte
00C3 A3         124            inc dptr
00C4 E534       125            mov a, RampTime
00C6 120076     126            lcall Flash_Byte
00C9 A3         127            inc dptr                        ;Key is 0x55, 0xAA
00CA 7455       128            mov a, #055H            ;If key is not set, the
00CC 120076     129            lcall Flash_Byte        ;Information stored 
00CF A3         130            inc dptr                        ;in flash is not valid!
00D0 74AA       131            mov a, #0aaH
00D2 120076     132            lcall Flash_Byte
00D5 22         133            ret
00D6            134   
00D6            135   ; Recall SoakTemp, SoakTime, ReflowTemp, ReflowTime, RampTime back into variables from flash memory
00D6            136   ; (WILL WIPE WHAT WAS IN SOAKTEMP, SOAKTIME, ETC) 
00D6            137   ReadConfig:
00D6 753078     138            mov SoakTemp, #120    ;'\ 
00D9 75313C     139            mov SoakTime, #60     ; |
00DC 7532DC     140            mov ReflowTemp, #220  ; |= DEFAULTS!
00DF 75332D     141            mov ReflowTime, #45       ; |
00E2 75343C     142            mov RampTime, #60         ;/
00E5 900006     143            mov dptr, #6    ; Reading flash backwareds 6 = number of variables needed + 1 
00E8 120004     144            lcall Read_Flash
00EB B4AA2B     145            cjne a, #0aah, done_ReadConfig  ; \      If key is valid,
00EE 1582       146            dec dpl                                                         ; |_ initialize variables
00F0 120004     147            lcall Read_Flash                                ; |  with stored values
00F3 B45523     148            cjne a, #055h, done_ReadConfig  ; /
00F6 1582       149            dec dpl
00F8 120004     150            lcall Read_Flash
00FB F534       151            mov Ramptime, a
00FD 1582       152            dec dpl
00FF 120004     153            lcall Read_Flash 
0102 F533       154            mov ReflowTime, a
0104 1582       155            dec dpl
0106 120004     156            lcall Read_Flash
0109 F532       157            mov ReflowTemp, a
010B 1582       158            dec dpl
010D 120004     159            lcall Read_Flash
0110 F531       160            mov SoakTime, a
0112 1582       161            dec dpl
0114 120004     162            lcall Read_Flash
0117 F530       163            mov SoakTemp, a
0119            164   done_ReadConfig:
0119 22         165            ret
011A            166            
011A            167   ; Simple dummy program to test things.
011A            168   myprogram:
011A 75817F     169                    mov SP, #7FH
011D 75E800     170                    mov LEDRA, #0
0120 759500     171                    mov LEDRB, #0
0123 759E00     172                    mov LEDRC, #0
0126 75F800     173                    mov LEDG, #0
0129 750302     174                    mov FLASHSECTOR, #2
012C            175   Forever:
012C 753007     176                    mov SoakTemp, #111B
012F 75313B     177                    mov SoakTime, #111011B
0132 75320B     178                    mov ReflowTemp, #1011B
0135 753302     179                    mov ReflowTIme, #10B
0138            180                    
0138 1200A6     181                    lcall SaveConfig
013B            182                    
013B 753000     183                    mov SoakTemp, #0
013E 753100     184                    mov SoakTime, #0
0141 753200     185                    mov ReflowTemp, #0
0144 753300     186                    mov ReflowTIme, #0
0147            187                    
0147 1200D6     188                    lcall ReadConfig
014A            189                    
014A 8531E8     190                    mov LEDRA, SoakTime
014D 853095     191                    mov LEDRB, SoakTemp
0150 85339E     192                    mov LEDRC, ReflowTime
0153 8532F8     193                    mov LEDG, ReflowTemp
0156            194                    
0156 02012C     195            ljmp Forever
0159            196                    
0159            197   EN
