                 -1   $MODDE2
0000              1   ;  MODDDE2: Register definition for DE2-8052 softcore
0000              2   ;
0000              3   ;   Copyright (C) 2011  Jesus Calvino-Fraga, jesusc at ece.ubc.ca
0000              4   ;
0000              5   ;   This library is free software; you can redistribute it and/or
0000              6   ;   modify it under the terms of the GNU Lesser General Public
0000              7   ;   License as published by the Free Software Foundation; either
0000              8   ;   version 2.1 of the License, or (at your option) any later version.
0000              9   ;
0000             10   ;   This library is distributed in the hope that it will be useful,
0000             11   ;   but WITHOUT ANY WARRANTY; without even the implied warranty of
0000             12   ;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
0000             13   ;   Lesser General Public License for more details.
0000             14   ;
0000             15   ;   You should have received a copy of the GNU Lesser General Public
0000             16   ;   License along with this library; if not, write to the Free Software
0000             17   ;   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
0000             18   ;
0000             19       
0000             20   P0     DATA  080H  ;PORT 0
0000             21   SP     DATA  081H  ;STACK POINTER
0000             22   DPL    DATA  082H  ;DATA POINTER - LOW BYTE
0000             23   DPH    DATA  083H  ;DATA POINTER - HIGH BYTE
0000             24   PCON   DATA  087H  ;POWER CONTROL
0000             25   TCON   DATA  088H  ;TIMER CONTROL
0000             26   TMOD   DATA  089H  ;TIMER MODE
0000             27   TL0    DATA  08AH  ;TIMER 0 - LOW BYTE
0000             28   TL1    DATA  08BH  ;TIMER 1 - LOW BYTE
0000             29   TH0    DATA  08CH  ;TIMER 0 - HIGH BYTE
0000             30   TH1    DATA  08DH  ;TIMER 1 - HIGH BYTE
0000             31   P1     DATA  090H  ;PORT 1
0000             32   SCON   DATA  098H  ;SERIAL PORT CONTROL
0000             33   SBUF   DATA  099H  ;SERIAL PORT BUFFER
0000             34   P2     DATA  0A0H  ;PORT 2
0000             35   IE     DATA  0A8H  ;INTERRUPT ENABLE
0000             36   P3     DATA  0B0H  ;PORT 3
0000             37   IP     DATA  0B8H  ;INTERRUPT PRIORITY
0000             38   T2CON  DATA  0C8H  ;TIMER 2 CONTROL
0000             39   T2MOD  DATA  0C9H  ;TIMER 2 MODE
0000             40   RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
0000             41   RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
0000             42   TL2    DATA  0CCH  ;TIMER 2 - LOW BYTE
0000             43   TH2    DATA  0CDH  ;TIMER 2 - HIGH BYTE
0000             44   PSW    DATA  0D0H  ;PROGRAM STATUS WORD
0000             45   ACC    DATA  0E0H  ;ACCUMULATOR
0000             46   B      DATA  0F0H  ;MULTIPLICATION REGISTER
0000             47   IT0    BIT   088H  ;TCON.0 - EXT. INTERRUPT 0 TYPE
0000             48   IE0    BIT   089H  ;TCON.1 - EXT. INTERRUPT 0 EDGE FLAG
0000             49   IT1    BIT   08AH  ;TCON.2 - EXT. INTERRUPT 1 TYPE
0000             50   IE1    BIT   08BH  ;TCON.3 - EXT. INTERRUPT 1 EDGE FLAG
0000             51   TR0    BIT   08CH  ;TCON.4 - TIMER 0 ON/OFF CONTROL
0000             52   TF0    BIT   08DH  ;TCON.5 - TIMER 0 OVERFLOW FLAG
0000             53   TR1    BIT   08EH  ;TCON.6 - TIMER 1 ON/OFF CONTROL
0000             54   TF1    BIT   08FH  ;TCON.7 - TIMER 1 OVERFLOW FLAG
0000             55   RI     BIT   098H  ;SCON.0 - RECEIVE INTERRUPT FLAG
0000             56   TI     BIT   099H  ;SCON.1 - TRANSMIT INTERRUPT FLAG
0000             57   RB8    BIT   09AH  ;SCON.2 - RECEIVE BIT 8
0000             58   TB8    BIT   09BH  ;SCON.3 - TRANSMIT BIT 8
0000             59   REN    BIT   09CH  ;SCON.4 - RECEIVE ENABLE
0000             60   SM2    BIT   09DH  ;SCON.5 - SERIAL MODE CONTROL BIT 2
0000             61   SM1    BIT   09EH  ;SCON.6 - SERIAL MODE CONTROL BIT 1
0000             62   SM0    BIT   09FH  ;SCON.7 - SERIAL MODE CONTROL BIT 0
0000             63   EX0    BIT   0A8H  ;IE.0 - EXTERNAL INTERRUPT 0 ENABLE
0000             64   ET0    BIT   0A9H  ;IE.1 - TIMER 0 INTERRUPT ENABLE
0000             65   EX1    BIT   0AAH  ;IE.2 - EXTERNAL INTERRUPT 1 ENABLE
0000             66   ET1    BIT   0ABH  ;IE.3 - TIMER 1 INTERRUPT ENABLE
0000             67   ES     BIT   0ACH  ;IE.4 - SERIAL PORT INTERRUPT ENABLE
0000             68   ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
0000             69   EA     BIT   0AFH  ;IE.7 - GLOBAL INTERRUPT ENABLE
0000             70   RXD    BIT   0B0H  ;P3.0 - SERIAL PORT RECEIVE INPUT
0000             71   TXD    BIT   0B1H  ;P3.1 - SERIAL PORT TRANSMIT OUTPUT
0000             72   INT0   BIT   0B2H  ;P3.2 - EXTERNAL INTERRUPT 0 INPUT
0000             73   INT1   BIT   0B3H  ;P3.3 - EXTERNAL INTERRUPT 1 INPUT
0000             74   T0     BIT   0B4H  ;P3.4 - TIMER 0 COUNT INPUT
0000             75   T1     BIT   0B5H  ;P3.5 - TIMER 1 COUNT INPUT
0000             76   WR     BIT   0B6H  ;P3.6 - WRITE CONTROL FOR EXT. MEMORY
0000             77   RD     BIT   0B7H  ;P3.7 - READ CONTROL FOR EXT. MEMORY
0000             78   PX0    BIT   0B8H  ;IP.0 - EXTERNAL INTERRUPT 0 PRIORITY
0000             79   PT0    BIT   0B9H  ;IP.1 - TIMER 0 PRIORITY
0000             80   PX1    BIT   0BAH  ;IP.2 - EXTERNAL INTERRUPT 1 PRIORITY
0000             81   PT1    BIT   0BBH  ;IP.3 - TIMER 1 PRIORITY
0000             82   PS     BIT   0BCH  ;IP.4 - SERIAL PORT PRIORITY
0000             83   PT2    BIT   0BDH  ;IP.5 - TIMER 2 PRIORITY
0000             84   CAP2   BIT   0C8H  ;T2CON.0 - CAPTURE OR RELOAD SELECT
0000             85   CNT2   BIT   0C9H  ;T2CON.1 - TIMER OR COUNTER SELECT
0000             86   TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
0000             87   EXEN2  BIT   0CBH  ;T2CON.3 - TIMER 2 EXTERNAL ENABLE FLAG
0000             88   TCLK   BIT   0CCH  ;T2CON.4 - TRANSMIT CLOCK SELECT
0000             89   RCLK   BIT   0CDH  ;T2CON.5 - RECEIVE CLOCK SELECTT
0000             90   EXF2   BIT   0CEH  ;T2CON.6 - EXTERNAL TRANSITION FLAG
0000             91   TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
0000             92   P      BIT   0D0H  ;PSW.0 - ACCUMULATOR PARITY FLAG
0000             93   OV     BIT   0D2H  ;PSW.2 - OVERFLOW FLAG
0000             94   RS0    BIT   0D3H  ;PSW.3 - REGISTER BANK SELECT 0
0000             95   RS1    BIT   0D4H  ;PSW.4 - REGISTER BANK SELECT 1
0000             96   F0     BIT   0D5H  ;PSW.5 - FLAG 0
0000             97   AC     BIT   0D6H  ;PSW.6 - AUXILIARY CARRY FLAG
0000             98   CY     BIT   0D7H  ;PSW.7 - CARRY FLAG
0000             99   
0000            100   ; For the altera DE2 configured with an 8051/8052 softcore processor
0000            101   ; we have the following extra registers:
0000            102   
0000            103   HEX0   DATA  091H ; Zero turns the segment on
0000            104   HEX1   DATA  092H ; 
0000            105   HEX2   DATA  093H ; 
0000            106   HEX3   DATA  094H ; 
0000            107   HEX4   DATA  08EH ;
0000            108   HEX5   DATA  08FH ;
0000            109   HEX6   DATA  096H ;
0000            110   HEX7   DATA  097H ;
0000            111   
0000            112   P0MOD  DATA  09AH ; Input/output mode bits for port 0.  '1' sets the port to output mode.
0000            113   P1MOD  DATA  09BH ; Input/output mode bits for port 1
0000            114   P2MOD  DATA  09CH ; Input/output mode bits for port 2
0000            115   P3MOD  DATA  09DH ; Input/output mode bits for port 3
0000            116   
0000            117   LEDRA  DATA  0E8H ; LEDs LEDR0 to LEDR7 (bit addressable, ex: LEDRA.1 for LEDR1)
0000            118   LEDRB  DATA  095H ; LEDs LEDR8 to LEDR15
0000            119   LEDRC  DATA  09EH ; LEDs LEDR16, LEDR15, and LEDG8
0000            120   LEDG   DATA  0F8H ; LEDs LEDG0 to LEDG7 (bit addressable, ex: LEDG.3 for LEDG3)
0000            121   SWA    DATA  0E8H ; Switches SW0 to SW7 (bit addressable, ex: SWA.1 for SW1)
0000            122   SWB    DATA  095H ; Switches SW8 to SW15
0000            123   SWC    DATA  09EH ; Switches SW16 and SW17
0000            124   KEY    DATA  0F8H ; KEY1=KEY.1, KEY2=KEY.2, KEY3=KEY.3.  KEY0 is the reset button! 
0000            125   
0000            126   LCD_CMD   DATA 0D8H ;
0000            127   LCD_DATA  DATA 0D9H ;
0000            128   LCD_MOD   DATA 0DAH ; Write 0xff to make LCD_DATA an output
0000            129   LCD_RW    BIT  0D8H ; '0' writes to LCD
0000            130   LCD_EN    BIT  0D9H ; Toggle from '1' to '0'
0000            131   LCD_RS    BIT  0DAH ; '0' for commands, '1' for data
0000            132   LCD_ON    BIT  0DBH ; Write '1' to power the LCD
0000            133   LCD_BLON  BIT  0DCH ; Write '1' to turn on back light
0000            134   
0000            135   FLASH_CMD  data 0DBH ; The control bits of the flash memory:
0000            136   ; bit 0: FL_RST_N  Set to 1 for normal operation
0000            137   ; bit 1: FL_WE_N
0000            138   ; bit 2: FL_OE_N
0000            139   ; bit 3: FL_CE_N
0000            140   FLASH_DATA data 0DCH ; 8-bit data bus of flash memory.
0000            141   FLASH_MOD  data 0DDH ; 0xff makes FLASH_DATA output.  0x00 makes FLASH_DATA input.
0000            142   FLASH_ADD0 data 0E1H ; address bits 0 to 7.
0000            143   FLASH_ADD1 data 0E2H ; address bits 8 to 15.
0000            144   FLASH_ADD2 data 0E3H ; address bits 16 to 21.
0000            145   
0000              2   org 0000H
0000 020CCB       3      ljmp MyProgram
000B              4   org 000BH
000B 020AA4       5      ljmp ISR_Timer0
001B              6   org 001BH
001B 020A20       7      ljmp ISR_Timer1
001E              8      
001E              9   FREQ   EQU 33333333
001E             10   BAUD   EQU 115200
001E             11   T2LOAD EQU 65536-(FREQ/(32*BAUD))
001E             12   
001E             13   XTAL           EQU 33333333
001E             14   FREQ_timer     EQU 100
001E             15   TIMER0_RELOAD  EQU 65538-(XTAL/(12*FREQ_timer))
001E             16   
001E             17   TIMER_RELOAD  EQU 65536-(XTAL/(12*2*20*FREQ_timer))
001E             18   
001E             19   CE_ADC EQU P0.3
001E             20   SCLK EQU P0.2
001E             21   MOSI EQU P0.1
001E             22   MISO EQU P0.0
001E             23   
001E             24   
001E             25   ;setting which sector of flash we are saving our variables to. Do not set to one.
001E             26   FLASHSECTOR EQU 2
001E             27   
0030             28   DSEG at 30H
0030             29   count10ms: ds 1
0031             30   count10ms2: ds 1
0032             31   PWM:        ds 1
0033             32   x:   ds 4
0037             33   y:   ds 4
003B             34   z:        ds 4
003F             35   bcd: ds 5
0044             36   overall_time: ds 2
0046             37   sec: ds 1
0047             38   state: ds 1
0048             39   temp: ds 1
0049             40   
0049             41   Shiftcount: ds 1
004A             42   AddressCounter: ds 1
004B             43   SoakTemp: ds 1
004C             44   SoakTime: ds 1
004D             45   ReflowTemp: ds 1
004E             46   ReflowTime: ds 1
004F             47   RampTime: ds 1
0050             48   DigitCount: ds 1
0051             49   MenuState: ds 1  
0052             50   
0000             51   BSEG
0000             52   mf: dbit 1
0001             53   timerflag: dbit 1
0002             54   LCDflag: dbit 1
0003             55   toggleflag: dbit 1
0004             56   leftmenu: dbit 1
0005             57   rightmenu: dbit 1
0006             58   alarm:   dbit 1
0007             59   noleadingzeroflag: dbit 1
0008             60   secondsflag: dbit 1
0009             61   
                 -1   $include(math32.asm)
                546   $LIST
                 -1   $include(LCD_User_Interface_v3.asm)
0811            802   $LIST
                 -1   $include(Flash_Library.asm)
0927            182   $LIST
0927             65   
0927             66   CSEG
0927             67   
0927             68   myLUT:
0927 C0F9A4B0    69       DB 0C0H, 0F9H, 0A4H, 0B0H, 099H        ; 0 TO 4
     99
092C 9282F880    70       DB 092H, 082H, 0F8H, 080H, 090H        ; 4 TO 9
     90
0931 8883C6A1    71       DB 088H, 083H, 0C6H, 0A1H, 086H, 08EH  ; A to F
     868E
0937             72   
0937             73   Begin:
0937 A5426567    74   DB 0A5H, 'Begin', 0
     696E00
093E             75   Settings:
093E A5536574    76   DB 0A5H, 'Settings', 0
     74696E67
     7300
0948             77   
0948             78   Set_Parameters:
0948 A5536574    79   DB 0A5H, 'Set parameters', 0
     20706172
     616D6574
     65727300
0958             80   
0958             81   Ramp_Time:
0958 A552616D    82   DB 0A5H, 'Ramp time', 0
     70207469
     6D6500
0963             83   Reflow_Temp:
0963 A5526566    84   DB 0A5H, 'Reflow temp', 0
     6C6F7720
     74656D70
     00
0970             85   Reflow_Time:
0970 A5526566    86   DB 0A5H, 'Reflow time', 0
     6C6F7720
     74696D65
     00
097D             87   Soak_Temp:
097D A5536F61    88   DB 0A5H, 'Soak temp', 0
     6B207465
     6D7000
0988             89   Soak_Time:
0988 A5536F61    90   DB 0A5H, 'Soak time', 0
     6B207469
     6D6500
0993             91   
0993             92   Setting_Ramp_Time:
0993 52616D70    93   DB 'Ramp time:', 0
     2074696D
     653A00
099E             94   Setting_Reflow_Temp:
099E 5265666C    95   DB 'Reflow temp:', 0
     6F772074
     656D703A
     00
09AB             96   Setting_Reflow_Time:
09AB 5265666C    97   DB 'Reflow time:', 0
     6F772074
     696D653A
     00
09B8             98   Setting_Soak_Temp:
09B8 536F616B    99   DB 'Soak temp:', 0
     2074656D
     703A00
09C3            100   Setting_Soak_Time:
09C3 536F616B   101   DB 'Soak time:', 0
     2074696D
     653A00
09CE            102   
09CE            103   Ramp_to_soak:
09CE 52616D70   104   DB 'Ramp to soak', 0
     20746F20
     736F616B
     00
09DB            105   Soak:
09DB 536F616B   106   DB 'Soak', 0
     00
09E0            107   Ramp_to_peak:
09E0 52616D70   108   DB 'Ramp to peak', 0
     20746F20
     7065616B
     00
09ED            109   Reflow:
09ED 5265666C   110   DB 'Reflow', 0
     6F7700
09F4            111   Cooling:
09F4 436F6F6C   112   DB 'Cooling', 0
     696E6700
09FC            113   
09FC            114   Back:
09FC A5426163   115   DB 0A5H, 'Back', 0
     6B00
0A02            116   
0A02            117   Error_Too_large0:
0A02 4572726F   118   DB 'Error: Value', 0
     723A2056
     616C7565
     00
0A0F            119   Error_Too_large1:
0A0F 67726561   120   DB 'greater than 255', 0
     74657220
     7468616E
     20323535
     00
0A20            121   ;-------------------------------------------------------------------------------------------------------------------------
0A20            122   ; This ISR is for counting the amount of time elapsed and updates the BCD
0A20            123   ;
0A20            124   ISR_Timer1:
0A20 758D93     125            mov TH1, #high(TIMER0_RELOAD)
0A23 758B81     126       mov TL1, #low(TIMER0_RELOAD)
0A26 0531       127       inc count10ms2
0A28 C0E0       128       push acc
0A2A C0D0       129       push psw
0A2C C000       130       push AR0
0A2E C001       131       push AR1
0A30 C002       132       push AR2
0A32 C003       133       push AR3
0A34            134       
0A34 C3         135       clr c
0A35 E531       136       mov a, count10ms2
0A37 9463       137       subb a, #99
0A39 405C       138       jc ISR1_done
0A3B            139       
0A3B E544       140       mov a, overall_time+0
0A3D 04         141       inc a
0A3E F544       142       mov overall_time+0,a
0A40            143       
0A40 E545       144       mov a, overall_time+1
0A42 3400       145       addc a, #0
0A44 F545       146       mov overall_time+1,a
0A46            147       
0A46 A833       148       mov R0, x+0
0A48 A934       149       mov R1, x+1
0A4A AA35       150       mov R2, x+2
0A4C AB36       151       mov R3, x+3
0A4E AC3F       152       mov R4, bcd+0
0A50 AD40       153       mov R5, bcd+1
0A52 C000       154       push AR0
0A54 C001       155       push AR1
0A56 C002       156       push AR2
0A58 C003       157       push AR3
0A5A C004       158       push AR4
0A5C C005       159       push AR5
0A5E            160            
0A5E 753300     161            mov x+0, #low (0 % 0x10000) 
0A61 753400     161            mov x+1, #high(0 % 0x10000) 
0A64 753500     161            mov x+2, #low (0 / 0x10000) 
0A67 753600     161            mov x+3, #high(0 / 0x10000) 
0A6A 854433     162            mov x+0, overall_time+0
0A6D 854534     163            mov x+1, overall_time+1
0A70 12001E     164            lcall hex2bcd
0A73 D208       165            setb secondsflag
0A75 1202C1     166            lcall DisplayLCD
0A78 C208       167            clr secondsflag
0A7A D005       168            pop AR5
0A7C D004       169            pop AR4
0A7E D003       170       pop AR3
0A80 D002       171       pop AR2
0A82 D001       172       pop AR1
0A84 D000       173       pop AR0
0A86 8833       174       mov x+0, R0
0A88 8934       175       mov x+1, R1
0A8A 8A35       176       mov x+2, R2
0A8C 8B36       177       mov x+3, R3
0A8E 8C3F       178       mov bcd+0, R4
0A90 8D40       179       mov bcd+1, R5
0A92            180       
0A92 0546       181       inc sec
0A94 753100     182       mov count10ms2, #0
0A97            183       ;cpl LEDRA.0
0A97            184   
0A97            185   ISR1_done:
0A97 D003       186            pop AR3
0A99 D002       187       pop AR2
0A9B D001       188       pop AR1
0A9D D000       189       pop AR0
0A9F D0D0       190            pop psw
0AA1 D0E0       191            pop acc
0AA3 32         192            reti
0AA4            193   ;-------------------------------------------------------------------------------------------------------------------------
0AA4            194   ; ISR for every time TIMER 0 goes.
0AA4            195   ;
0AA4            196   ;-------------------------------------------------------------------------------------------------------------------------
0AA4            197   ISR_Timer0:
0AA4 758CFD     198       mov TH0, #high(TIMER_RELOAD)
0AA7 758A4A     199       mov TL0, #low(TIMER_RELOAD)
0AAA            200       
0AAA C0E0       201       push acc
0AAC C0D0       202            push psw
0AAE            203            
0AAE 300602     204            jnb alarm, skip_alarm
0AB1 B286       205            cpl p0.6
0AB3            206   skip_alarm:
0AB3            207   
0AB3 E532       208            mov a, PWM
0AB5 B40A04     209            cjne A, #10, skip_ten
0AB8 D285       210            setb p0.5
0ABA 801B       211            sjmp not_set_pin
0ABC            212   skip_ten:
0ABC            213   
0ABC B40004     214            cjne A, #0, skip_zero
0ABF C285       215            clr p0.5
0AC1 8014       216            sjmp not_set_pin
0AC3            217   skip_zero:
0AC3 0530       218            inc count10ms
0AC5            219            
0AC5 E530       220            mov a, count10ms
0AC7 B40A08     221            cjne a, #10, not_set
0ACA 753000     222            mov count10ms, #0
0ACD            223            ;clr c
0ACD            224       ;mov a, count10ms
0ACD            225       ;subb a, #9
0ACD            226       ;jc not_set
0ACD            227            
0ACD 753000     228            mov count10ms, #0
0AD0 D285       229            setb p0.5
0AD2            230   not_set:
0AD2            231   
0AD2 B53202     232            cjne a, PWM, not_set_pin
0AD5 C285       233            clr P0.5
0AD7            234   not_set_pin:
0AD7 D0D0       235            pop psw
0AD9 D0E0       236            pop acc
0ADB 32         237            reti
0ADC            238            
0ADC            239   ;-------------------------------------------------------------------------------------------------------------------------       
0ADC            240   ; Initialize timer as a 16-bit timer with TIMER_RELOAD as the value:
0ADC            241   ;
0ADC            242   ; Probably used for Counting seconds or 10ms?
0ADC            243   ;
0ADC            244   ;-------------------------------------------------------------------------------------------------------------------------
0ADC            245   
0ADC            246   Init_Timer0:     
0ADC            247       
0ADC 758911     248       mov TMOD,  #00010001B ; GATE=0, C/T*=0, M1=0, M0=1: 16-bit timer
0ADF C28C       249            clr TR0 ; Disable timer 0
0AE1 C28D       250            clr TF0
0AE3 758CFD     251       mov TH0, #high(TIMER_RELOAD)
0AE6 758A4A     252       mov TL0, #low(TIMER_RELOAD)
0AE9 D28C       253       setb TR0 ; Enable timer 0
0AEB D2A9       254       setb ET0 ; Enable timer 0 interrupt
0AED            255       
0AED            256       ;mov TMOD,  #00010000B ; GATE=0, C/T*=0, M1=0, M0=1: 16-bit timer
0AED C28E       257            clr TR1 ; Disable timer 1
0AEF C28F       258            clr TF1
0AF1 758D93     259       mov TH1, #high(TIMER0_RELOAD)
0AF4 758B81     260       mov TL1, #low(TIMER0_RELOAD)
0AF7 D28E       261       setb TR1 ; Enable timer 1
0AF9 D2AB       262       setb ET1 ; Enable timer 1 interrupt
0AFB            263       
0AFB D2AF       264       setb EA
0AFD            265       
0AFD 22         266       ret
0AFE            267   ;-------------------------------------------------------------------------------------------------------------------------
0AFE            268   INIT_SPI:
0AFE 439A06     269            orl P0MOD, #00000110b ; Set SCLK, MOSI as outputs
0B01 539AFE     270            anl P0MOD, #11111110b ; Set MISO as input
0B04 C282       271            clr SCLK ; Mode 0,0 default
0B06 22         272            ret
0B07            273   DO_SPI_G:
0B07 7900       274            mov R1, #0 ; Received byte stored in R1
0B09 7A08       275            mov R2, #8 ; Loop counter (8-bits)
0B0B            276   DO_SPI_G_LOOP:
0B0B E8         277            mov a, R0 ; Byte to write is in R0
0B0C 33         278            rlc a ; Carry flag has bit to write
0B0D F8         279            mov R0, a 
0B0E 9281       280            mov MOSI, c
0B10 D282       281            setb SCLK ; Transmit
0B12 A280       282            mov c, MISO ; Read received bit
0B14 E9         283            mov a, R1 ; Save received bit in R1
0B15 33         284            rlc a
0B16 F9         285            mov R1, a
0B17 C282       286            clr SCLK
0B19 DAF0       287            djnz R2, DO_SPI_G_LOOP
0B1B 22         288            ret
0B1C            289   ;-------------------------------------------------------------------------------------------------------------------------
0B1C            290   ; Channel to read passed in register b
0B1C            291   Read_ADC_Channel:
0B1C C283       292            clr CE_ADC
0B1E 7801       293            mov R0, #00000001B ; Start bit:1
0B20 120B07     294            lcall DO_SPI_G
0B23            295            
0B23 E5F0       296            mov a, b
0B25 C4         297            swap a
0B26 54F0       298            anl a, #0F0H
0B28 D2E7       299            setb acc.7 ; Single mode (bit 7).
0B2A            300            
0B2A F8         301            mov R0, a ; Select channel
0B2B 120B07     302            lcall DO_SPI_G
0B2E E9         303            mov a, R1 ; R1 contains bits 8 and 9
0B2F 5403       304            anl a, #03H
0B31 FF         305            mov R7, a
0B32            306            
0B32 7855       307            mov R0, #55H ; It doesn't matter what we transmit...
0B34 120B07     308            lcall DO_SPI_G
0B37 E9         309            mov a, R1 ; R1 contains bits 0 to 7
0B38 FE         310            mov R6, a
0B39 D283       311            setb CE_ADC
0B3B 1203D0     312            lcall delay
0B3E 22         313            ret
0B3F            314   ;-------------------------------------------------------------------------------------------------------------------------
0B3F            315   ; Look-up table for 7-seg displays
0B3F            316   T_7seg:
0B3F C0F9A4B0   317       DB 0C0H, 0F9H, 0A4H, 0B0H, 099H
     99
0B44 9282F880   318       DB 092H, 082H, 0F8H, 080H, 090H
     90
0B49 8883       319       DB 088H, 083H
0B4B            320   
0B4B            321   
0B4B            322   Display_BCD:
0B4B            323            
0B4B 900B3F     324            mov dptr, #T_7seg
0B4E            325   
0B4E E540       326            mov a, bcd+1
0B50 C4         327            swap a
0B51 540F       328            anl a, #0FH
0B53 93         329            movc a, @a+dptr
0B54 F594       330            mov HEX3, a     
0B56            331            
0B56 E540       332            mov a, bcd+1
0B58 540F       333            anl a, #0FH
0B5A 93         334            movc a, @a+dptr
0B5B F593       335            mov HEX2, a
0B5D            336   
0B5D E53F       337            mov a, bcd+0
0B5F C4         338            swap a
0B60 540F       339            anl a, #0FH
0B62 93         340            movc a, @a+dptr
0B63 F592       341            mov HEX1, a
0B65            342            
0B65 E53F       343            mov a, bcd+0
0B67 540F       344            anl a, #0FH
0B69 93         345            movc a, @a+dptr
0B6A F591       346            mov HEX0, a
0B6C            347            
0B6C 22         348            ret
0B6D            349   ;-------------------------------------------------------------------------------------------------------------------------
0B6D            350   Display_BCD2:
0B6D            351            
0B6D 900B3F     352            mov dptr, #T_7seg
0B70            353   
0B70 E540       354            mov a, bcd+1
0B72 C4         355            swap a
0B73 540F       356            anl a, #0FH
0B75 93         357            movc a, @a+dptr
0B76 F597       358            mov HEX7, a     
0B78            359            
0B78 E540       360            mov a, bcd+1
0B7A 540F       361            anl a, #0FH
0B7C 93         362            movc a, @a+dptr
0B7D F596       363            mov HEX6, a
0B7F            364   
0B7F E53F       365            mov a, bcd+0
0B81 C4         366            swap a
0B82 540F       367            anl a, #0FH
0B84 93         368            movc a, @a+dptr
0B85 F58F       369            mov HEX5, a
0B87            370            
0B87 E53F       371            mov a, bcd+0
0B89 540F       372            anl a, #0FH
0B8B 93         373            movc a, @a+dptr
0B8C F58E       374            mov HEX4, a
0B8E            375            
0B8E 22         376            ret
0B8F            377   ;-------------------------------------------------------------------------------------------------------------------------       
0B8F            378   ;Delay:
0B8F            379   ;        mov R3, #20
0B8F            380   ;Delay_loop:
0B8F            381   ;        djnz R3, Delay_loop
0B8F            382   ;        ret
0B8F            383   ;-------------------------------------------------------------------------------------------------------------------------               
0B8F            384   ; Configure the serial port and baud rate using timer 2
0B8F            385   ;-------------------------------------------------------------------------------------------------------------------------
0B8F            386   InitSerialPort:
0B8F C2CA       387            clr TR2 ; Disable timer 2
0B91 75C830     388            mov T2CON, #30H ; RCLK=1, TCLK=1 
0B94 75CBFF     389            mov RCAP2H, #high(T2LOAD)  
0B97 75CAF7     390            mov RCAP2L, #low(T2LOAD)
0B9A D2CA       391            setb TR2 ; Enable timer 2
0B9C 759852     392            mov SCON, #52H
0B9F 22         393            ret
0BA0            394   ;-------------------------------------------------------------------------------------------------------------------------
0BA0            395   ; Send a character through the serial port
0BA0            396   putchar:
0BA0 3099FD     397       JNB TI, putchar
0BA3 C299       398       CLR TI
0BA5 F599       399       MOV SBUF, a
0BA7 22         400       RET
0BA8            401   ;-------------------------------------------------------------------------------------------------------------------------   
0BA8            402   WaitHalfSec:
0BA8 7A5A       403            mov R2, #90
0BAA 79FA       404   L3: mov R1, #250
0BAC 78FA       405   L2: mov R0, #250
0BAE D8FE       406   L1: djnz R0, L1
0BB0 D9FA       407            djnz R1, L2
0BB2 DAF6       408            djnz R2, L3
0BB4 22         409            ret
0BB5            410            
0BB5            411   WaitHalfSec2:
0BB5 120BA8     412            lcall WaitHalfSec
0BB8 120BA8     413            lcall WaitHalfSec
0BBB 120BA8     414            lcall WaitHalfSec
0BBE 120BA8     415            lcall WaitHalfSec
0BC1 22         416            ret
0BC2            417   
0BC2            418   ;-------------------------------------------------------------------------------------------------------------------------
0BC2            419   SendNum:
0BC2            420   
0BC2 E540       421            mov a, bcd+1
0BC4 C4         422            swap a
0BC5 540F       423            anl a,#0fH
0BC7 4430       424            orl a,#30H
0BC9 120BA0     425            lcall putchar
0BCC            426            
0BCC            427   ;        jb SWA.0,skip_dot
0BCC            428   ;        mov a,#2EH
0BCC            429   ;        lcall putchar
0BCC            430   ;skip_dot:       
0BCC E540       431            mov a, bcd+1
0BCE 540F       432            anl a,#0fH
0BD0 4430       433            orl a,#30H
0BD2 120BA0     434            lcall putchar
0BD5            435            
0BD5 E53F       436            mov a, bcd+0
0BD7 C4         437            swap a
0BD8 540F       438            anl a,#0fH
0BDA 4430       439            orl a,#30H
0BDC 120BA0     440            lcall putchar
0BDF            441            
0BDF 742E       442            mov a, #2EH
0BE1 120BA0     443            lcall putchar
0BE4            444   
0BE4 E53F       445            mov a, bcd+0
0BE6 540F       446            anl a,#0fH
0BE8 4430       447            orl a,#30H
0BEA 120BA0     448            lcall putchar
0BED            449            
0BED 22         450            ret
0BEE            451   ;-------------------------------------------------------------------------------------------------------------------------
0BEE            452   ; Send a constant-zero-terminated string through the serial port
0BEE            453   SendString:
0BEE E4         454       CLR A
0BEF 93         455       MOVC A, @A+DPTR
0BF0 6006       456       JZ SSDone
0BF2 120BA0     457       LCALL putchar
0BF5 A3         458       INC DPTR
0BF6 80F6       459       SJMP SendString
0BF8            460   SSDone:
0BF8 22         461       ret
0BF9            462   ;-------------------------------------------------------------------------------------------------------------------------
0BF9            463   Hello_World:
0BF9 48656C6C   464       DB  'Hello, World!', '\r', '\n', 0
     6F2C2057
     6F726C64
     210D0A00
0C09            465   Numbers:
0C09 30313233   466            DB  '0','1','2','3','4','5','6','7','8','9'
     34353637
     3839
0C13            467   ;-------------------------------------------------------------------------------------------------------------------------
0C13            468   
0C13            469   
0C13            470   ; Converts 
0C13            471   Bin2Voltage:
0C13 753600     472            mov x+3, #0
0C16 753500     473            mov x+2, #0
0C19 8F34       474            mov x+1, R7
0C1B 8E33       475            mov x+0, R6
0C1D 7537E8     476            mov y+0, #low (1000 % 0x10000) 
0C20 753803     476            mov y+1, #high(1000 % 0x10000) 
0C23 753900     476            mov y+2, #low (1000 / 0x10000) 
0C26 753A00     476            mov y+3, #high(1000 / 0x10000) 
0C29 120198     477            lcall mul32
0C2C 753700     478            mov y+0, #low (1024 % 0x10000) 
0C2F 753804     478            mov y+1, #high(1024 % 0x10000) 
0C32 753900     478            mov y+2, #low (1024 / 0x10000) 
0C35 753A00     478            mov y+3, #high(1024 / 0x10000) 
0C38 120225     479            lcall div32
0C3B 753705     480            mov y+0, #low (5 % 0x10000) 
0C3E 753800     480            mov y+1, #high(5 % 0x10000) 
0C41 753900     480            mov y+2, #low (5 / 0x10000) 
0C44 753A00     480            mov y+3, #high(5 / 0x10000) 
0C47 120198     481            lcall mul32
0C4A            482            
0C4A            483            ;jnb SWA.0,skip1
0C4A 753732     484            mov y+0, #low (50 % 0x10000) 
0C4D 753800     484            mov y+1, #high(50 % 0x10000) 
0C50 753900     484            mov y+2, #low (50 / 0x10000) 
0C53 753A00     484            mov y+3, #high(50 / 0x10000)    
0C56 120198     485            lcall mul32
0C59 753764     486            mov y+0, #low (100 % 0x10000) 
0C5C 753800     486            mov y+1, #high(100 % 0x10000) 
0C5F 753900     486            mov y+2, #low (100 / 0x10000) 
0C62 753A00     486            mov y+3, #high(100 / 0x10000) 
0C65 120225     487            lcall div32
0C68 853B37     488            mov y+0, z+0
0C6B 853C38     489            mov y+1, z+1
0C6E 853D39     490            mov y+2, z+2
0C71 853E3A     491            mov y+3, z+3
0C74 1200E3     492            lcall add32
0C77            493            
0C77            494   skip1:   
0C77 22         495            ret
0C78            496            
0C78            497   Bin2Voltage2:
0C78 753600     498            mov x+3, #0
0C7B 753500     499            mov x+2, #0
0C7E 8F34       500            mov x+1, R7
0C80 8E33       501            mov x+0, R6
0C82 7537E8     502            mov y+0, #low (1000 % 0x10000) 
0C85 753803     502            mov y+1, #high(1000 % 0x10000) 
0C88 753900     502            mov y+2, #low (1000 / 0x10000) 
0C8B 753A00     502            mov y+3, #high(1000 / 0x10000) 
0C8E 120198     503            lcall mul32
0C91 753700     504            mov y+0, #low (1024 % 0x10000) 
0C94 753804     504            mov y+1, #high(1024 % 0x10000) 
0C97 753900     504            mov y+2, #low (1024 / 0x10000) 
0C9A 753A00     504            mov y+3, #high(1024 / 0x10000) 
0C9D 120225     505            lcall div32
0CA0 753705     506            mov y+0, #low (5 % 0x10000) 
0CA3 753800     506            mov y+1, #high(5 % 0x10000) 
0CA6 753900     506            mov y+2, #low (5 / 0x10000) 
0CA9 753A00     506            mov y+3, #high(5 / 0x10000) 
0CAC 120198     507            lcall mul32
0CAF 7537AA     508            mov y+0, #low (2730 % 0x10000) 
0CB2 75380A     508            mov y+1, #high(2730 % 0x10000) 
0CB5 753900     508            mov y+2, #low (2730 / 0x10000) 
0CB8 753A00     508            mov y+3, #high(2730 / 0x10000) 
0CBB 120104     509            lcall sub32     
0CBE 85333B     510            mov z+0, x+0
0CC1 85343C     511            mov z+1, x+1
0CC4 85353D     512            mov z+2, x+2
0CC7 85363E     513            mov z+3, x+3
0CCA            514   skip2:   
0CCA 22         515            ret
0CCB            516            
0CCB            517   ;-------------------------------------------------------------------------------------------------------------------------
0CCB            518   
0CCB            519   ;-------------------------------------------------------------------------------------------------------------------------
0CCB            520   MyProgram:
0CCB 75817F     521       MOV SP, #7FH
0CCE 75E800     522       mov LEDRA, #0
0CD1 759500     523       mov LEDRB, #0
0CD4 759E00     524       mov LEDRC, #0
0CD7 75F800     525       mov LEDG, #0
0CDA            526            ;orl P0MOD, #00010000b
0CDA            527   
0CDA 753B00     528            mov z+0, #0
0CDD 753C00     529            mov z+1, #0
0CE0 753D00     530            mov z+2, #0
0CE3 753E00     531            mov z+3, #0
0CE6            532   
0CE6 753000     533            mov count10ms, #0
0CE9 753100     534            mov count10ms2, #0
0CEC 753200     535            mov PWM, #0     
0CEF 754600     536            mov sec, #0
0CF2 754700     537            mov state, #0
0CF5 754800     538            mov temp, #0
0CF8            539            
0CF8            540            ;====-=-=--=
0CF8 7C00       541            mov R4, #0
0CFA 7D00       542            mov R5, #0
0CFC 788A       543            mov R0, #8AH
0CFE 75F080     544            mov b, #80H
0D01 D202       545            setb LCDflag
0D03 C205       546            clr rightmenu
0D05 C204       547            clr leftmenu
0D07 755100     548            mov MenuState, #0
0D0A            549            
0D0A            550            ; Turn LCD on, and wait a bit.
0D0A D2DB       551       setb LCD_ON
0D0C C2D9       552       clr LCD_EN  ; Default state of enable must be zero
0D0E 1203A0     553       lcall Wait40us
0D11            554       
0D11 75DAFF     555       mov LCD_MOD, #0xff ; Use LCD_DATA as output port
0D14 C2D8       556       clr LCD_RW ;  Only writing to the LCD in this code.
0D16            557            
0D16 740C       558            mov a, #0ch ; Display on command
0D18 120345     559            lcall LCD_command
0D1B 7438       560            mov a, #38H ; 8-bits interface, 2 lines, 5x7 characters
0D1D 120345     561            lcall LCD_command
0D20 120334     562            lcall ClearLCD
0D23            563            
0D23 120334     564            lcall ClearLCD
0D26 740F       565            mov a, #0FH
0D28 120345     566            lcall LCD_command
0D2B D204       567            setb leftmenu
0D2D D205       568            setb rightmenu
0D2F 120559     569            lcall DisplayOptions
0D32 7480       570            mov a, #80H
0D34 120345     571            lcall LCD_command
0D37 C0E0       572            push acc
0D39 754B14     573            mov SoakTemp, #20 ;150
0D3C 754C0A     574            mov SoakTime, #10 ;50
0D3F 754D14     575            mov ReflowTemp, #20 ;210
0D42 754E0A     576            mov ReflowTime, #10 ;45
0D45 754F00     577            mov RampTime, #0
0D48 C206       578            clr alarm
0D4A C286       579            clr p0.6
0D4C C200       580       clr mf
0D4E            581    
0D4E 439A68     582       orl P0MOD, #01101000b ; make CE_ADC (P0.3) output
0D51 C285       583       clr P0.5
0D53 C286       584       clr P0.6
0D55            585            
0D55            586   
0D55            587   Foreverer:
0D55 754400     588            mov overall_time+0, #0
0D58 754500     589            mov overall_time+1, #0
0D5B C2AF       590            clr ea
0D5D            591            ;mov a, SWC
0D5D            592            ;jb acc.0, Pazz
0D5D D0E0       593            pop acc
0D5F 753300     594            mov x+0, #low (0 % 0x10000) 
0D62 753400     594            mov x+1, #high(0 % 0x10000) 
0D65 753500     594            mov x+2, #low (0 / 0x10000) 
0D68 753600     594            mov x+3, #high(0 / 0x10000) 
0D6B 120693     595            lcall UpdateMenu
0D6E 12051A     596            lcall Scroll
0D71 C0E0       597            push acc
0D73 E547       598            mov a, state
0D75 B401DD     599            cjne a, #1, Foreverer
0D78            600            ;ljmp Foreverer
0D78            601   ;==-=-=-=-=-
0D78            602   Pazz:
0D78 120ADC     603            lcall Init_timer0
0D7B 120B8F     604            LCALL InitSerialPort 
0D7E 120AFE     605            lcall INIT_SPI
0D81 754700     606            mov state, #0
0D84            607            
0D84            608   Forever:
0D84 20FB06     609            jb KEY.3, Forever_L0
0D87 30FBFD     610            jnb KEY.3, $
0D8A 020CCB     611            ljmp myprogram
0D8D            612   Forever_L0:
0D8D 75F000     613            mov b,#0 ;thermo
0D90 120B1C     614            lcall Read_ADC_Channel
0D93 120C13     615            lcall Bin2Voltage
0D96 12001E     616            lcall hex2bcd
0D99 120B4B     617            lcall display_bcd
0D9C 1202C1     618            lcall DisplayLCD
0D9F            619            
0D9F 75370A     620            mov y+0, #low (10 % 0x10000) 
0DA2 753800     620            mov y+1, #high(10 % 0x10000) 
0DA5 753900     620            mov y+2, #low (10 / 0x10000) 
0DA8 753A00     620            mov y+3, #high(10 / 0x10000) 
0DAB 120225     621            lcall div32
0DAE 853348     622            mov temp, x+0
0DB1 120BA8     623            lcall waithalfsec
0DB4 120BC2     624            lcall sendNum
0DB7 740D       625            mov a,#'\r'
0DB9 120BA0     626            lcall putchar
0DBC 740A       627            mov a,#'\n'
0DBE 120BA0     628            lcall putchar
0DC1            629            
0DC1 75F001     630            mov b,#1 ;lm335
0DC4 120B1C     631            lcall Read_ADC_Channel
0DC7 120C78     632            lcall Bin2Voltage2
0DCA 854633     633            mov x+0, sec
0DCD 753400     634            mov x+1, #0
0DD0 753500     635            mov x+2, #0
0DD3 753600     636            mov x+3, #0
0DD6 12001E     637            lcall hex2bcd
0DD9 120B6D     638            lcall display_bcd2
0DDC            639            
0DDC            640            
0DDC            641            
0DDC E547       642            mov a, state
0DDE 8547F8     643            mov LEDG, state
0DE1            644            ;mov LEDRB, temp
0DE1            645   
0DE1            646   ;        cjne a, #0, state0_skip
0DE1            647            
0DE1            648   state0:
0DE1 B4000E     649            cjne a, #0, state1
0DE4            650   ;        lcall UpdateMenu
0DE4            651   ;        lcall Scroll
0DE4            652   ;        cjne a, #0, state1
0DE4            653   ;        mov pwm, #0
0DE4            654   ;        mov a, ReflowTime
0DE4            655   ;        cjne a, #0, state1switch
0DE4            656   ;        sjmp state0_done
0DE4            657   ;state1switch:
0DE4            658   ;        mov state, #1
0DE4            659   ;state0_done:
0DE4 754701     660            mov state, #1
0DE7 D206       661            setb alarm
0DE9 754600     662            mov sec, #0
0DEC 753100     663            mov count10ms2, #0
0DEF            664            ;lcall waithalfsec
0DEF 020D84     665            ljmp forever
0DF2            666   
0DF2            667   state1:
0DF2 C0E0       668            push acc
0DF4 74A8       669            mov a, #0A8H
0DF6 120345     670            lcall LCD_command
0DF9 9009CE     671            mov dptr, #Ramp_to_soak
0DFC 120395     672            lcall LCD_string
0DFF D0E0       673            pop acc
0E01            674            
0E01 C206       675            clr alarm
0E03 C286       676            clr p0.6
0E05 B4011C     677            cjne a, #1, state2
0E08 75320A     678            mov pwm, #10
0E0B            679            
0E0B 854B95     680            mov LEDRB, Soaktemp
0E0E E54B       681            mov a, SoakTemp
0E10 C3         682            clr c
0E11 14         683            dec a
0E12 9548       684            subb a, temp
0E14 500B       685            jnc state1_done
0E16 754702     686            mov state, #2
0E19 D206       687            setb alarm
0E1B            688            ;lcall waithalfsec
0E1B 754600     689            mov sec, #0
0E1E 753100     690            mov count10ms2, #0
0E21            691   state1_done:
0E21 020D84     692            ljmp forever
0E24            693   
0E24            694   state2:
0E24 C0E0       695            push acc
0E26 74A8       696            mov a, #0A8H
0E28 120345     697            lcall LCD_command
0E2B 9009DB     698            mov dptr, #Soak
0E2E 120395     699            lcall LCD_string
0E31 7808       700            mov r0, #8
0E33 1203AF     701            lcall Write_space
0E36 D0E0       702            pop acc
0E38            703            
0E38 C206       704            clr alarm
0E3A C286       705            clr p0.6        
0E3C B40228     706            cjne a, #2, state3
0E3F            707            
0E3F            708            
0E3F E54B       709            mov a, SoakTemp
0E41 C3         710            clr c
0E42 9548       711            subb a, temp
0E44 5005       712            jnc increase_temp
0E46 753200     713            mov pwm, #0
0E49 8003       714            sjmp not_increase_temp
0E4B            715   increase_temp:
0E4B 753202     716            mov pwm, #2
0E4E            717   not_increase_temp:
0E4E            718   
0E4E 854C95     719            mov LEDRB, SoakTime
0E51 E54C       720            mov a, SoakTime
0E53 C3         721            clr c
0E54 14         722            dec a
0E55 9546       723            subb a, sec
0E57 500B       724            jnc state2_done
0E59 754600     725            mov sec, #0
0E5C 753100     726            mov count10ms2, #0
0E5F 754703     727            mov state, #3
0E62 D206       728            setb alarm
0E64            729            ;lcall waithalfsec
0E64            730   state2_done:
0E64 020D84     731            ljmp forever
0E67            732   
0E67            733   state3:
0E67 C0E0       734            push acc
0E69 74A8       735            mov a, #0A8H
0E6B 120345     736            lcall LCD_command
0E6E 9009E0     737            mov dptr, #Ramp_to_peak
0E71 120395     738            lcall LCD_string
0E74 D0E0       739            pop acc
0E76            740            ;cpl LEDRA.2;;;;;;;;;;;;;
0E76 C206       741            clr alarm
0E78 C286       742            clr p0.6
0E7A B4031C     743            cjne a, #3, state4
0E7D            744            ;cpl LEDRA.3;;;;;;;;;;;;
0E7D 75320A     745            mov pwm, #10
0E80            746            
0E80 854D95     747            mov LEDRB, Reflowtemp
0E83 E54D       748            mov a, ReflowTemp
0E85 C3         749            clr c
0E86 14         750            dec a
0E87 9548       751            subb a, temp
0E89 500B       752            jnc state3_done
0E8B            753            ;cpl LEDRA.4;;;;;;;;;;;;;;;
0E8B 754704     754            mov state, #4
0E8E            755            ;mov LEDG,state
0E8E D206       756            setb alarm
0E90            757            ;cpl LEDRA.4;;;;;;;;;;;;;;;
0E90            758            ;lcall waithalfsec
0E90            759            ;cpl LEDRA.5;;;;;;;;;;;;;;;
0E90 754600     760            mov sec, #0
0E93 753100     761            mov count10ms2, #0
0E96            762   state3_done:
0E96            763            
0E96 020D84     764            ljmp forever
0E99            765   
0E99            766   state4:
0E99 C0E0       767            push acc
0E9B 74A8       768            mov a, #0A8H
0E9D 120345     769            lcall LCD_command
0EA0 9009ED     770            mov dptr, #Reflow
0EA3 120395     771            lcall LCD_string
0EA6 7806       772            mov r0, #6
0EA8 1203AF     773            lcall Write_space
0EAB D0E0       774            pop acc
0EAD            775            ;cpl LEDRA.5;;;;;;;;;;;;;;;
0EAD C206       776            clr alarm
0EAF C286       777            clr p0.6
0EB1 B4041F     778            cjne a, #4, state5
0EB4 753201     779            mov pwm, #1
0EB7            780            
0EB7 854E95     781            mov LEDRB, ReflowTime
0EBA E54E       782            mov a, ReflowTime
0EBC C3         783            clr c
0EBD 14         784            dec a
0EBE 9546       785            subb a, sec
0EC0 500E       786            jnc state4_done
0EC2 754705     787            mov state, #5
0EC5 D206       788            setb alarm
0EC7 120BB5     789            lcall waithalfsec2  ;;;;;;;;;;;;
0ECA 754600     790            mov sec, #0
0ECD 753100     791            mov count10ms2, #0
0ED0            792   state4_done:
0ED0 020D84     793            ljmp forever
0ED3            794   
0ED3            795   state5:
0ED3 C0E0       796            push acc
0ED5 74A8       797            mov a, #0A8H
0ED7 120345     798            lcall LCD_command
0EDA 9009F4     799            mov dptr, #Cooling
0EDD 120395     800            lcall LCD_string
0EE0 D0E0       801            pop acc
0EE2            802            ;cjne a, #5, state0
0EE2 C206       803            clr alarm
0EE4 C286       804            clr p0.6
0EE6 753200     805            mov pwm, #0
0EE9 C3         806            clr c
0EEA E548       807            mov a, temp
0EEC 9432       808            subb a, #50
0EEE 5077       809            jnc state5_done
0EF0            810            
0EF0 D206       811            setb alarm
0EF2 120BA8     812            lcall waithalfsec
0EF5 C206       813            clr alarm
0EF7 C286       814            clr p0.6
0EF9 120BA8     815            lcall waithalfsec
0EFC            816            
0EFC D206       817            setb alarm
0EFE 120BA8     818            lcall waithalfsec
0F01 C206       819            clr alarm
0F03 C286       820            clr p0.6
0F05 120BA8     821            lcall waithalfsec
0F08            822            
0F08 D206       823            setb alarm
0F0A 120BA8     824            lcall waithalfsec
0F0D C206       825            clr alarm
0F0F C286       826            clr p0.6
0F11 120BA8     827            lcall waithalfsec
0F14            828            
0F14 D206       829            setb alarm
0F16 120BA8     830            lcall waithalfsec
0F19 C206       831            clr alarm
0F1B C286       832            clr p0.6
0F1D 120BA8     833            lcall waithalfsec
0F20            834            
0F20 D206       835            setb alarm
0F22 120BA8     836            lcall waithalfsec
0F25 C206       837            clr alarm
0F27 C286       838            clr p0.6
0F29 120BA8     839            lcall waithalfsec
0F2C            840            
0F2C D206       841            setb alarm
0F2E 120BA8     842            lcall waithalfsec
0F31 C206       843            clr alarm
0F33 C286       844            clr p0.6
0F35 120BA8     845            lcall waithalfsec
0F38            846            
0F38 D206       847            setb alarm
0F3A 120BA8     848            lcall waithalfsec
0F3D C206       849            clr alarm
0F3F C286       850            clr p0.6
0F41            851            
0F41 754600     852            mov sec, #0
0F44 753100     853            mov count10ms2, #0
0F47            854            
0F47 754700     855            mov state, #0
0F4A 8547F8     856            mov LEDG, state
0F4D 755100     857            mov menustate, #0
0F50 120559     858            lcall DisplayOptions
0F53 7480       859            mov a, #80H
0F55 120345     860            lcall LCD_command
0F58 740F       861            mov a, #0FH
0F5A 120345     862            lcall LCD_command
0F5D 759500     863            mov LEDRB, #0
0F60 7480       864            mov a, #80H
0F62 C0E0       865            push acc
0F64 020D55     866            ljmp foreverer
0F67            867   state5_done:
0F67 020D84     868            ljmp forever
0F6A            869            
0F6A            870   END
